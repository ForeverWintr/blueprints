# This mostly comes from examples here: https://github.com/marketplace/actions/install-poetry-action

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:


jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          version: "~= 23.0"

  test:
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12.0-alpha - 3.12"]
        os: ["ubuntu-latest", "macos-latest", "windows-latest"] # Not all python versions are available for all OSes
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ matrix.python-version }}
        # cache: 'poetry' # Needs poetry lockfile.

    - name: Install poetry
      uses: snok/install-poetry@v1.3.3
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        # installer-parallel: true # May have caused an issue on macos

    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install library
      run: poetry install --no-interaction

    - name: Run tests
      run: poetry run pytest --cov=blueprints --cov-report=xml


    #----------------------------------------------
    #             upload coverage stats
    # (requires CODECOV_TOKEN in repository secrets)
    #----------------------------------------------
    - name: Upload coverage
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: true
